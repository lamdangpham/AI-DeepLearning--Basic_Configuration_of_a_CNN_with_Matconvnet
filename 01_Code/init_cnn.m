function net = init_cnn()

rng('default');
rng(0) ;

net.layers = {} ;
fprintf('initialised CNN\n');

% Block 1 ------------------------------------------------
net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{0.01*randn(3,3,1,32, 'single'), zeros(1, 32, 'single')}}, ...
                           'stride', 1, ...
                           'pad', 0) ;
net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'max', ...
                           'pool', [2 2], ...
                           'stride', 2, ...
                           'pad', 0) ;
% Block 2 ------------------------------------------------

net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{0.01*randn(3,3,32,64, 'single'),zeros(1,64,'single')}}, ...
                           'stride', 1, ...
                           'pad', 0) ;
net.layers{end+1} = struct('type', 'pool', ...
                           'method', 'max', ...
                           'pool', [2 2], ...
                           'stride', 2, ...
                           'pad', 0) ;
% Block 3 ------------------------------------------------
net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{0.01*randn(16,16,64,128, 'single'),  zeros(1,128,'single')}}, ...
                           'stride', 1, ...
                           'pad', 0) ;

net.layers{end+1} = struct('type', 'bnorm', ...
                           'weights', {{0.001*randn(128,1, 'single'), zeros(128,1, 'single'),[ones(128,1, 'single'), ones(128,1, 'single')]}}, ...
                           'Moments', [zeros(128,1, 'single'), ones(128,1, 'single')],...
                           'epsilon', 1e-5 );                

net.layers{end+1} = struct('type', 'relu') ;

% Block 4 ------------------------------------------------
net.layers{end+1} = struct('type', 'conv', ...
                           'weights', {{f*randn(1,1,128,10, 'single'), zeros(1,10,'single')}}, ...
                           'stride', 1, ...
                           'pad', 0) ;

net.layers{end+1} = struct('type', 'softmaxloss') ;
